{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Desktop/goit-react-homework-02-movies/src/components/MovieGrid/MovieGrid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport design from './Moviegrid.module.css';\nimport MovieCard from '../MovieCard/MovieCard';\n\nconst MovieGrid = ({\n  items,\n  inputValue\n}) => {\n  const invalidSearch = 'sorry, nothing has been found';\n  return React.createElement(\"ul\", {\n    className: design.movie_grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, items.filter(item => item.title.toLowerCase().includes(inputValue.toLowerCase())).length > 0 ? items.filter(item => item.title.toLowerCase().includes(inputValue.toLowerCase())).map(item => React.createElement(MovieCard, {\n    key: item.id,\n    overview: item.overview,\n    posterUrl: item.posterUrl,\n    title: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })) : React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, invalidSearch));\n};\n\nMovieCard.propTypes = {\n  inputValue: PropTypes.string,\n  invalidSearch: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    overview: PropTypes.string,\n    posterUrl: PropTypes.string,\n    title: PropTypes.string\n  }))\n};\nexport default MovieGrid;\n/*\n{items.map(item => (\n        <MovieCard\n          key={item.id}\n          overview={item.overview}\n          posterUrl={item.posterUrl}\n          title={item.title}\n        />\n      ))}\n*/","map":{"version":3,"sources":["/Users/olga/Desktop/goit-react-homework-02-movies/src/components/MovieGrid/MovieGrid.js"],"names":["React","PropTypes","design","MovieCard","MovieGrid","items","inputValue","invalidSearch","movie_grid","filter","item","title","toLowerCase","includes","length","map","id","overview","posterUrl","propTypes","string","arrayOf","shape","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC3C,QAAMC,aAAa,GAAG,+BAAtB;AACA,SACE;AAAI,IAAA,SAAS,EAAEL,MAAM,CAACM,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,MAAN,CAAaC,IAAI,IAChBA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCP,UAAU,CAACM,WAAX,EAAlC,CADD,EAECE,MAFD,GAEU,CAFV,GAGCT,KAAK,CACFI,MADH,CACUC,IAAI,IACVA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCP,UAAU,CAACM,WAAX,EAAlC,CAFJ,EAIGG,GAJH,CAIOL,IAAI,IACP,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACM,EADZ;AAEE,IAAA,QAAQ,EAAEN,IAAI,CAACO,QAFjB;AAGE,IAAA,SAAS,EAAEP,IAAI,CAACQ,SAHlB;AAIE,IAAA,KAAK,EAAER,IAAI,CAACC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAHD,GAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,aAAL,CAjBJ,CADF;AAsBD,CAxBD;;AA0BAJ,SAAS,CAACgB,SAAV,GAAsB;AACpBb,EAAAA,UAAU,EAAEL,SAAS,CAACmB,MADF;AAEpBb,EAAAA,aAAa,EAAEN,SAAS,CAACmB,MAFL;AAGpBf,EAAAA,KAAK,EAAEJ,SAAS,CAACoB,OAAV,CACLpB,SAAS,CAACqB,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEf,SAAS,CAACsB,MADA;AAEdN,IAAAA,QAAQ,EAAEhB,SAAS,CAACmB,MAFN;AAGdF,IAAAA,SAAS,EAAEjB,SAAS,CAACmB,MAHP;AAIdT,IAAAA,KAAK,EAAEV,SAAS,CAACmB;AAJH,GAAhB,CADK;AAHa,CAAtB;AAaA,eAAehB,SAAf;AAEA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport design from './Moviegrid.module.css';\nimport MovieCard from '../MovieCard/MovieCard';\n\nconst MovieGrid = ({ items, inputValue }) => {\n  const invalidSearch = 'sorry, nothing has been found';\n  return (\n    <ul className={design.movie_grid}>\n      {items.filter(item =>\n        item.title.toLowerCase().includes(inputValue.toLowerCase()),\n      ).length > 0 ? (\n        items\n          .filter(item =>\n            item.title.toLowerCase().includes(inputValue.toLowerCase()),\n          )\n          .map(item => (\n            <MovieCard\n              key={item.id}\n              overview={item.overview}\n              posterUrl={item.posterUrl}\n              title={item.title}\n            />\n          ))\n      ) : (\n        <li>{invalidSearch}</li>\n      )}\n    </ul>\n  );\n};\n\nMovieCard.propTypes = {\n  inputValue: PropTypes.string,\n  invalidSearch: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      posterUrl: PropTypes.string,\n      title: PropTypes.string,\n    }),\n  ),\n};\n\nexport default MovieGrid;\n\n/*\n{items.map(item => (\n        <MovieCard\n          key={item.id}\n          overview={item.overview}\n          posterUrl={item.posterUrl}\n          title={item.title}\n        />\n      ))}\n*/\n"]},"metadata":{},"sourceType":"module"}